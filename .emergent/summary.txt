<analysis>
The trajectory outlines an intensive development and debugging cycle for the Le Maître Mot application. The initial task was to provide a comprehensive summary of the existing project, which features a FastAPI backend and a React frontend for AI-powered educational content generation.

The core of the work involved three major, sequential feature implementations requested by the user:
1.  **Subject Expansion**: Integrating Physique-Chimie and SVT by updating  and adding subject-specific AI prompts in .
2.  **Architectural Overhaul**: Implementing a feature flag system to support the entire French curriculum (23 subjects). This introduced a new  file, refactored  and  endpoints, and updated the React frontend to display subject statuses (e.g., active, coming_soon). This phase was followed by significant debugging to resolve  issues caused by incorrect prompt logic flow.
3.  **Advanced Geography Module**: Creating a sophisticated system to automatically find and attach rights-free educational documents (maps) to Geography exercises. This required a new  module and further integration into .

The final phase has been a series of rapid bug-fix cycles for the Geography feature. Issues addressed include a  caused by a validation conflict between the new and old curriculum systems, implementing the missing frontend/PDF display logic for documents, refining document selection to be context-aware, and finally, diagnosing that the documents fail to display because their cached URLs are invalid and return 404 errors.
</analysis>

<product_requirements>
Le Maître Mot is an AI-driven web application for French educators to generate custom exercises. Initially focused on Mathematics, the platform has undergone significant expansion.

**Core Functionality:**
*   **AI Content Generation (GPT-4o):** Creates exercises and solutions based on the French national curriculum.
*   **Freemium Model:** A free tier with limits and a Pro subscription (Stripe) unlocking advanced features.
*   **PDF/DOCX Export:** Pro users can export content using customizable templates with school logos.

**Recent Implementations & Vision:**
The product vision has expanded to become a comprehensive platform for the entire French curriculum.
1.  **Multi-Subject Support:** The application now actively supports **Mathématiques, Physique-Chimie, and SVT**, with specialized AI prompts for each.
2.  **Feature Flag System:** A robust backend system has been implemented to manage the rollout of all 23 official subjects. The frontend displays the full catalog, visually indicating which subjects are active, coming soon, or in development, creating a clear product roadmap for users.
3.  **Advanced Document Integration (Géographie):** For the Geography subject, a new system automatically searches for and embeds relevant, rights-free educational documents (e.g., maps from Wikimedia Commons) directly into the generated exercises, complete with licensing information.
</product_requirements>

<key_technical_concepts>
- **Backend:** FastAPI (Python), MongoDB, Pydantic, WeasyPrint (PDFs).
- **Frontend:** React, shadcn/ui components.
- **AI & Integrations:** GPT-4o via .
- **Architecture:**
    - **Feature Flags:** A dictionary-based system in  controls subject availability (, , etc.) without requiring redeployment.
    - **Dynamic AI Prompts:**  uses a dictionary () to select specialized prompts based on the chosen subject, with a generic fallback for newly activated subjects.
    - **Automated Document Search:** A two-pass system for Geography first generates the exercise text, then uses keywords to search and attach a relevant map from a cached/validated list or via the Wikimedia Commons API.
</key_technical_concepts>

<code_architecture>
The application uses a standard monolith architecture with a separate frontend and backend.



- ****: The core FastAPI application. It was heavily modified to:
    - Integrate the feature flag system, refactoring the  and  endpoints to check subject status from .
    - Implement dynamic AI prompt selection logic for different subjects.
    - Integrate the  module to attach documents to Geography exercises.
    - Add logging for the document attachment process in the PDF export logic.
    - Fix a Pydantic model name conflict by renaming the  field to .

- ****: Originally stored the curriculum for Mathematics. It was updated to include data for Physique-Chimie and SVT. It now represents the data source for subjects that were active before the feature flag system.

- ****: A new file that is central to the platform's multi-subject strategy. It contains the  dictionary, which defines the status (, , etc.), description, and curriculum data for all 23 subjects of the French educational system.

- ****: A new module created to implement the advanced Geography feature. It handles the logic for searching educational documents, primarily from a pre-validated cache of maps with keywords, and includes a (currently unused) framework for querying the Wikimedia Commons API as a fallback. It was updated to include more specific maps and a content analysis function to select the most relevant one.

- ****: The React component for previewing generated exercises. It was modified to display the educational document attached to Geography exercises, including its title, image, and attribution notice. This was a critical addition to complete the feature on the user-facing side.

- ****: The Jinja2 templates for PDF exports. All relevant templates (, , etc.) were updated with a new section and CSS to conditionally render the attached educational document and its attribution information if present in the exercise data.
</code_architecture>

<pending_tasks>
- **Original Deferred Tasks:** The two-pass AI generation for geometric schemas and the implementation of general analytics/testing remain unaddressed as development focus shifted to major feature expansions.
</pending_tasks>

<current_work>
The most recent work focuses on debugging the Advanced Geography Module. After successfully implementing the backend logic for document search and the frontend/PDF logic for display, two user-reported issues arose:

1.  **Repetitive Documents:** The system always attached the same generic world map regardless of the exercise content. This was addressed by implementing an intelligent document system in . This system analyzes keywords in the exercise text (e.g., Tokyo, New York) to select a more contextually appropriate map from an expanded cache.

2.  **Documents Not Displaying:** Following the previous fix, the user reported that no documents were being displayed at all (pas de document affiché). The metadata (title, license) was visible, but the image itself was broken.

Investigation revealed the root cause: the URLs for the maps stored in the  within  are invalid and return **404 Not Found** errors. The immediate task is to fix these broken image URLs.
</current_work>

<optional_next_step>
Correct the invalid image URLs in the  within  to resolve the 404 errors and ensure geography documents are displayed correctly.
</optional_next_step>
